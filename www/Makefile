#!/usr/bin/make -rRf

HTML_FILES = index.html
CSS_FILES  = styles.css
TS_FILES   = app.ts sync.ts async.ts js-api.ts
JS_FILES   = app.js async.js
WASM_FILES = wasm_sync_bg.wasm wasm_async_bg.wasm

SOURCE_JS_FILES  = $(TS_FILES:.ts=.js)
WASM_TS_FILES    = $(WASM_FILES:_bg.wasm=.d.ts)
WASM_JS_FILES    = $(WASM_FILES:_bg.wasm=.js)

TS_OPTIONS=-t es5 -m commonjs --strict --noImplicitAny --strictNullChecks --strictFunctionTypes \
	--strictBindCallApply --strictPropertyInitialization --noImplicitThis --alwaysStrict \
	--noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch \
	--noEmitOnError --inlineSources --inlineSourceMap

C_GREEN  = \033[0;32m
C_YELLOW = \033[0;33m
C_BLUE   = \033[1;34m
C_GRAY   = \033[30;1m
C_END    = \033[0m

all: dev rel

.PHONY: all dev rel clean clean_intermediate FORCE

.SECONDARY:

dev: \
	$(addprefix dist/dev/,$(HTML_FILES)) \
	$(addprefix dist/dev/,$(CSS_FILES)) \
	$(addprefix dist/dev/,$(JS_FILES)) \
	$(addprefix dist/dev/,$(WASM_FILES)) \
	Makefile

rel: \
	$(addprefix dist/rel/,$(HTML_FILES)) \
	$(addprefix dist/rel/,$(CSS_FILES)) \
	$(addprefix dist/rel/,$(JS_FILES)) \
	$(addprefix dist/rel/,$(WASM_FILES)) \
	Makefile

clean:
	rm -rf build dist

clean_intermediate:
	rm -rf build

build/css/%.css: scss/%.scss Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GREEN)scss > css$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/sass --no-source-map "$<" "$@"

build/css-rcs/%.css: build/css/%.css build/selector-mapping-mod.json scripts/apply-css-renaming.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GRAY)scss > $(C_GREEN)css$(C_GRAY) > bundle$(C_GREEN) + rcs-map > rcs$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	node scripts/apply-css-renaming.js build/selector-mapping-mod.json "$<" "$@"

build/css-nano/%.css: build/css-rcs/%.css postcss.config.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GRAY)scss > $(C_GREEN)css$(C_GRAY) > bundle + rcs-map > $(C_GREEN)rcs > nano$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/postcss "$<" > "$@"

build/html-rcs/%.html: html/%.html build/selector-mapping-mod.json scripts/apply-css-renaming.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)HTML %-16s $(C_GREEN)html + rcs-map > rcs$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	node scripts/apply-css-renaming.js build/selector-mapping-mod.json "$<" "$@"

build/css-bundle.css: $(addprefix build/css/,$(CSS_FILES)) Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GRAY)scss > $(C_GREEN)css > bundle$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cat $(addprefix build/css/,$(CSS_FILES)) > "$@"

build/selector-mapping.json: build/css-bundle.css scripts/build-css-renaming.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RCS  %-16s $(C_GRAY)scss > css > $(C_GREEN)bundle > rcs-map$(C_END)\n" "MAP"
	@mkdir -p $(shell dirname "$@")
	node scripts/build-css-renaming.js build/css-bundle.css build/selector-mapping.json

build/selector-mapping-mod.json: build/selector-mapping.json Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js/%.js: ts/%.ts $(addprefix ts/,$(TS_FILES)) $(addprefix ts/,$(WASM_TS_FILES)) Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GREEN)ts + bindgen > js$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/tsc --outDir build/js "$<" $(TS_OPTIONS)

build/js-dev/%.js: build/js/%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-rel/%.js: build/js/%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/bindgen-dev-js/wasm_%.js: build/bindgen-dev/wasm_%.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > dev-wasm > $(C_GREEN)dev-bindgen > dev-wasm-js$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"
	sed -e 's/import\.meta\.url/location.href/g' "$<" > "$@"

build/bindgen-rel-js/wasm_%.js: build/bindgen-rel/wasm_%.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > rel-wasm > $(C_GREEN)rel-bindgen > rel-wasm-js$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"
	sed -e 's/import\.meta\.url/location.href/g' "$<" > "$@"

build/bindgen-ts/wasm_%.d.ts: build/bindgen-dev/wasm_%.d.ts Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > dev-wasm > $(C_GREEN)dev-bindgen > ts-bindgen$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	echo "// This file is automatically generated and should not be edited" > "$@"
	sed -E "s/ *$$//g" "$<" >> "$@"

ts/wasm_%.d.ts: build/bindgen-ts/wasm_%.d.ts Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-dev/wasm_%.js: build/bindgen-dev-js/wasm_%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-rel/wasm_%.js: build/bindgen-rel-js/wasm_%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-babel-dev/%.js: build/js-dev/%.js babel.dev.config.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + ts-bindgen > $(C_GREEN)js > babel$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/babel --config-file ./babel.dev.config.js "$<" -o "$@"

build/js-babel-rel/%.js: build/js-rel/%.js babel.rel.config.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + ts-bindgen > $(C_GREEN)js > babel$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/babel --config-file ./babel.rel.config.js "$<" -o "$@"

build/js-bundle-dev/%.js: build/js-babel-dev/%.js \
		$(addprefix build/js-babel-dev/,$(SOURCE_JS_FILES)) \
		$(addprefix build/js-babel-dev/,$(WASM_JS_FILES)) Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + bindgen > js > $(C_GREEN)babel + wasm-js > dev-bundle$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/browserify -o "$@" "$<" --debug

build/js-bundle-rel/%.js: build/js-babel-rel/%.js \
		$(addprefix build/js-babel-rel/,$(SOURCE_JS_FILES)) \
		$(addprefix build/js-babel-rel/,$(WASM_JS_FILES)) Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + bindgen > js > $(C_GREEN)babel + wasm-js > rel-bundle$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/browserify -o "$@" "$<"

build/js-bundle-dev-mod/%.js: build/js-bundle-dev/%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-bundle-rel-mod/%.js: build/js-bundle-rel/%.js Makefile
	@mkdir -p $(shell dirname "$@")
	@if ! cmp -s "$<" "$@"; then cp "$<" "$@"; fi

build/js-rcs-rel/%.js: build/js-bundle-rel-mod/%.js build/selector-mapping-mod.json scripts/apply-css-renaming.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + bindgen > js > babel + wasm-js > $(C_GREEN)rel-bundle + rcs-map > rcs$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	node scripts/apply-css-renaming.js build/selector-mapping-mod.json "$<" "$@"

build/wasm-dev/wasm_%.wasm: FORCE scripts/build-wasm.sh Makefile
	@mkdir -p $(shell dirname "$@")
	@if bash scripts/build-wasm.sh "$*" "$@" "" debug; then \
	printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GREEN)rust > dev-wasm$(C_GRAY)$(C_END)\n" "$*"; fi

build/wasm-rel/wasm_%.wasm: FORCE scripts/build-wasm.sh Makefile
	@mkdir -p $(shell dirname "$@")
	@if bash scripts/build-wasm.sh "$*" "$@" --release release; then \
	printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GREEN)rust > rel-wasm$(C_GRAY)$(C_END)\n" "$*"; fi

build/bindgen-dev/wasm_%.js: build/wasm-dev/wasm_%.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > $(C_GREEN)dev-wasm > dev-bindgen$(C_GRAY)$(C_END)\n" "$*"
	cd "../wasm-$*"; ../tools/bin/wasm-bindgen "../www/$<" --out-dir ../www/build/bindgen-dev --target web

build/bindgen-rel/wasm_%.js: build/wasm-rel/wasm_%.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > $(C_GREEN)rel-wasm > rel-bindgen$(C_GRAY)$(C_END)\n" "$*"
	cd "../wasm-$*"; ../tools/bin/wasm-bindgen "../www/$<" --out-dir ../www/build/bindgen-rel --target web

build/bindgen-dev/wasm_%_bg.wasm: build/bindgen-dev/wasm_%.js Makefile
	touch "$@"

build/bindgen-rel/wasm_%_bg.wasm: build/bindgen-rel/wasm_%.js Makefile
	touch "$@"

build/bindgen-dev/wasm_%.d.ts: build/bindgen-dev/wasm_%.js Makefile
	touch "$@"

build/bindgen-rel/wasm_%.d.ts: build/bindgen-rel/wasm_%.js Makefile
	touch "$@"

build/wasm-dev-opt/wasm_%_bg.wasm: build/bindgen-dev/wasm_%_bg.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > dev-wasm > $(C_GREEN)dev-bindgen > opt-dev-wasm$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/wasm-opt -O3 "$<" -o "$@"

build/wasm-rel-opt/wasm_%_bg.wasm: build/bindgen-rel/wasm_%_bg.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > rel-wasm > $(C_GREEN)rel-bindgen > opt-rel-wasm$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	$(shell npm bin)/wasm-opt -O3 "$<" -o "$@"

dist/dev/%.html: html/%.html Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)HTML %-16s $(C_GREEN)html > dev-html$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/dev/%.css: build/css/%.css Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GRAY)scss > $(C_GREEN)css > dev-css$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/dev/%.js: build/js-bundle-dev-mod/%.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + bindgen > js > babel + wasm-js > $(C_GREEN)dev-bundle > dev-js$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/dev/%_bg.wasm: build/wasm-dev-opt/%_bg.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > dev-wasm > dev-bindgen > $(C_GREEN)opt-dev-wasm > dev-dist-wasm$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/rel/%.html: build/html-rcs/%.html Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)HTML %-16s $(C_GRAY)html + rcs-map > $(C_GREEN)rcs > rel-html$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/rel/%.css: build/css-nano/%.css Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)SCSS %-16s $(C_GRAY)scss > css > bundle > rcs-map > rcs > $(C_GREEN)nano > rel-css$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/rel/%.js: build/js-rcs-rel/%.js Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)TS   %-16s $(C_GRAY)ts + bindgen > js > babel + wasm-js > rel-bundle + rcs-map > $(C_GREEN)rcs > rel-js$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"

dist/rel/%_bg.wasm: build/wasm-rel-opt/%_bg.wasm Makefile
	@printf "$(C_BLUE)Build $(C_YELLOW)RUST %-16s $(C_GRAY)rust > rel-wasm > rel-bindgen > $(C_GREEN)opt-rel-wasm > rel-dist-wasm$(C_END)\n" "$*"
	@mkdir -p $(shell dirname "$@")
	cp "$<" "$@"
